#!/bin/bash

# cd Desktop/Github/BUT-INFO/S1/R1.04-Systèmes-d-exploitations/TPs/Projet

FICHIER="/Users/colasnaudi/Desktop/Github/BUT-INFO/S1/R1.04-Systèmes-d-exploitations/TPs/Projet/VFS.txt"
# ---------------------------------------------------------------------------- #
#                                   FONCTIONS                                  #
# ---------------------------------------------------------------------------- #

# ---------------------------------------------------------------------------- #
#                                Fonction CREATE                               #
# ---------------------------------------------------------------------------- #
# BUT : Créer le dossier VFS

function create() {
    echo "VFS crée"
    mkdir VFS
    mkdir VFS/Documents VFS/Images VFS/Musique VFS/Videos
    mkdir VFS/Documents/Systeme VFS/Documents/Word VFS/Documents/LibreOffice VFS/Images/Jpg VFS/Images/Png VFS/Musique/Wav VFS/Musique/Mp3 VFS/Videos/Mp4
    touch VFS/Documents/Systeme/doc1.sh VFS/Documents/Word/doc1.docx VFS/Documents/LibreOffice/doc1.odt VFS/Images/Jpg/doc1.jpg VFS/Images/Png/doc1.png VFS/Musique/Wav/doc1.wav VFS/Musique/Mp3/doc1.mp3 VFS/Videos/Mp4/doc1.mp4
}


# ---------------------------------------------------------------------------- #
#                                Fonction DELETE                               #
# ---------------------------------------------------------------------------- #
# BUT : Supprimer le dossier VFS

function delete() {
    if [ -d "VFS" ] ; then
        echo "VFS supprimé"
        # -r supprime récursivement le répertoire VFS
        rm -r VFS
    else
        echo "VFS n'est pas crée"
    fi
}


# ---------------------------------------------------------------------------- #
#                                 Fonction COPY                                #
# ---------------------------------------------------------------------------- #
# BUT : Copier un fichier dans le VFS en analysant son extension

function copy() {
    echo "COPIE"
}


# ---------------------------------------------------------------------------- #
#                                Fonction WHERE                                #
# ---------------------------------------------------------------------------- #
# BUT : Récupérer le chemin du fichier passé en paramètre

function where() {
    echo "WHERE"
    # ----------------- Récupération de l'extension du paramètre ----------------- #
    extension=".${arg2##*.}"
    # ------------------ Récupération du nom du fichier/dossier ------------------ #
    nomFichier="${arg2%%.*}"
    echo $extension
    echo $nomFichier
    # ------------------------- Appel de la fonction IsIn ------------------------ #
    isIn
}


# ---------------------------------------------------------------------------- #
#                                 Fonction IsIn                                #
# ---------------------------------------------------------------------------- #
# BUT : Vérifier que le fichier passé en paramètre est bien présent dans le VFS
#       Cette fonction sert à la fonction WHERE

function isIn() {
    echo "IsIn"
}


# ---------------------------------------------------------------------------- #
#                                 Fonction FSCK                                #
# ---------------------------------------------------------------------------- #
# BUT : Vérifie l'intégrité du système de fichiers
function fsck() {
    echo "FSCK"
}

# ---------------------------------------------------------------------------- #
#                              Programme principal                             #
# ---------------------------------------------------------------------------- #

arg2=$2

# -------------------- Si le premier argument est -create -------------------- #
if [ $1 == "-create" ] ; then
    # ------------------- Si le dossier n'existe pas on le crée ------------------ #
    if [ ! -e "VFS" ] ; then
        create
    else
    # --------------- Sinon on demande s'il veut recréer le dossier -------------- #
        echo "Le dossier VFS existe déjà, voulez-vous écraser le dossier ? (o/n) "
        read ecraser
        # ------------- S'il répond "o" pour oui le dossier est recrée et ------------ #
        # ----------------- s'il répond "n" pour non on ne fait rien ----------------- #
        if [ $ecraser == "o" ] ; then
            echo "Le dossier VFS est recréé"
            delete
            create
        fi
    fi
# -------------------- Si le premier argument est -delete -------------------- #
elif [ $1 == "-delete" ] ; then
    delete
# --------------------- Si le premier argument est -copy --------------------- #
elif [ $1 == "-copy" ] ; then
    copy
# --------------------- Si le premier argument est -where -------------------- #
elif [ $1 == "-where" ] ; then
    where
# --------------------- Si le premier argument est -fsck --------------------- #
elif [ $1 == "-fsck" ] ; then
    fsck
# ----------- Sinon afficher le manuel d'aide pour les instructions ---------- #
else
    echo "Instruction inconnue : "
    echo "-create : pour créer le VFS."
    echo "-delete : pour supprimer le VFS."
    echo "-copy nom_fichier : pour copier un fichier dans le VFS."
    echo "-where nom_fichier : pour récupérer le chemin d'un fichier."
    echo "-fsck : vérifier l'intégrité du système de fichier."
fi